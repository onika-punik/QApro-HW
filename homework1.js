// Сложение происходит слева на право. В связи с тем что слева находится стринг, то int преобразовывается в строчку и складывается;
'number' + 3 + 3 == 'number33';
// Null при численном преобразовании становится равным нулю;
null + 3 == 3;
//Oператор && вычисляет операнды слева направо до первого «ложного» и возвращает его, а если все истинные — то последнее значение;
5 && "qwerty" =='qwerty'; 
//Унарные операторы превращают '40' и '2' в числа,затем складывается число и строка;
+'40' + +'2' + "hillel" == '42hillel';
// false, так как сравниваются разные типы;
'10' - 5 === 6 == false;
// true преобразуется в 1,а false в 0;
true + false == 1;
//Если строка не является в точности числом, то результат будет NaN;
'4px' - 3 == NaN;
//Значение'4' приводится к числу и выполняется вычисление;
'4' - 3 == 1;
//3 возводится в нулевую степень и получаем 1,затем происходит сложение строчки с числом,при котором число преобразуемтся в строчку перед сложением;
'6' + 3**0 == '61';
//Значение'6' приводится к числу и выполняется деление;
12/'6' == 2;
//В скобках у нас оператор строгого равенства,что приводит нас к false, затем происходит сложение строчки и false в булевом контексте;
'10'+(5===6) == '10false';
//false, так как сравниваются разные типы;
null == '' == false;
// Оператор ** выполняет возведение в степень;
3** (9/3) == 27;
// Оператор !!(не) приводит аргумент к логическому типу и потом возврощает противоположное значение;
!!'false' == !!'true' == true;
//Приоритет оператора И && больше, чем ИЛИ ||, так что он выполняется раньше. Где мы получаем 1,а затем оператор ИЛИ ||;
0 || '0' && 1 == 1;
// В первую очередь выполняется унарный оператор преобразовывая нул в ноль,
// далее выполняется выражение в скобках где 0 равен false и выражение равно true.
// При сравнении true будет преобразован в 1. В результате сравнение результат выражение равен false
(+null == false) < 1 == false ;
//Приоритет оператора && больше, чем ||, так что он выполняется раньше;
false && true || true == true; 
//Выражение в скобках имеет приоритет;
false && (false ||true) == false;
// В первую очередь выполняется унарный оператор преобразовывая нул в ноль,
// далее выполняется выражение в скобках где 0 равен false и выражение равно true.
// При сравнении true будет преобразован в 1. В результате сравнение результат выражение равен false, так как 2 в степени 5 все так же равен 1
(+null == false) < 1** 5 ==false;